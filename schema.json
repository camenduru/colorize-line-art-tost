{
    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
    "type": "object",
    "properties": {
      "readme": {
        "type": "string",
        "title": "Adding Conditional Control to Text-to-Image Diffusion Models",
        "author": "Lvmin Zhang, Anyi Rao, Maneesh Agrawala",
        "description": "We present ControlNet, a neural network architecture to add spatial conditioning controls to large, pretrained text-to-image diffusion models. ControlNet locks the production-ready large diffusion models, and reuses their deep and robust encoding layers pretrained with billions of images as a strong backbone to learn a diverse set of conditional controls. The neural architecture is connected with "zero convolutions" (zero-initialized convolution layers) that progressively grow the parameters from zero and ensure that no harmful noise could affect the finetuning. We test various conditioning controls, eg, edges, depth, segmentation, human pose, etc, with Stable Diffusion, using single or multiple conditions, with or without prompts. We show that the training of ControlNets is robust with small (<50k) and large (>1m) datasets. Extensive results show that ControlNet may facilitate wider applications to control image diffusion models.",
        "code": "https://github.com/lllyasviel/ControlNet-v1-1-nightly",
        "jupyter": "https://github.com/camenduru/ControlNet-v1-1-nightly-colab",
        "post": "https://x.com/camenduru/status/1646565853985374219",
        "tags": [
          "Image to Image"
        ],
        "widget": "readme"
      },
      "input_image": {
        "type": "string",
        "description": "Input Image URL",
        "widget": "textarea"
      },
      "prompt": {
        "type": "string",
        "description": "Prompt",
        "widget": "textarea"
      },
      "det": {
        "type": "string",
        "widget": "select",
        "description": "Light Direction",
        "oneOf": [
          {
            "description": "None",
            "enum": [
              "None"
            ]
          },
          {
            "description": "Lineart Anime",
            "enum": [
              "Lineart_Anime"
            ]
          }
        ],
        "default": "None"
      },
      "a_prompt": {
        "type": "string",
        "description": "Added Prompt",
        "widget": "textarea"
      },
      "n_prompt": {
        "type": "string",
        "description": "Negative prompt",
        "widget": "textarea"
      }
      ,"image_resolution": {
        "type": "integer",
        "description": "Image Resolution"
      }
      ,"detect_resolution": {
        "type": "integer",
        "description": "Detect Resolution"
      }
      ,"ddim_steps": {
        "type": "integer",
        "description": "DDIM Steps"
      }
      ,"strength": {
        "type": "number",
        "description": "Strength"
      }
      ,"scale": {
        "type": "number",
        "description": "Scale"
      }
      ,"seed": {
        "type": "integer",
        "description": "Seed"
      }
      ,"eta": {
        "type": "number",
        "description": "ETA"
      }
    },
    "buttons": [
      {
        "id": "enter",
        "label": "ðŸ¥ª Enter"
      }
    ]
  }